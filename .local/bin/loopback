#!/usr/bin/env python3

# loopback wrapper script. (C) 2020 Aalok S.
# Usage:
# ---
# python3 loopback ['0' | '1']
#
# default behaviour: toggles state as previously known 
#   (the only issue would be if the computer is shut down
#     while the module was enabled)
# optional arguments: 
#   '0'   set the state to disabled
#   '1'   set the state to enabled

from subprocess import run
from pathlib import Path
import sys

conf = Path('~/.config/loopback.switch') # stores current state.
                                         # 0 --> loopback disabled
                                         # 1 --> loopback enabled
conf = conf.expanduser()
if not conf.exists():
    conf.touch()
    conf.write_text('0')

inverse = {'1':'0', '0':'1'}

b = sys.argv[1] if len(sys.argv) > 1 else inverse[conf.read_text()]
conf.write_text(b)

enable = 'pactl load-module module-loopback latency_msec=1'
disable = 'pactl unload-module module-loopback'
if b == '1':
    run(enable, shell=True)
else:
    run(disable, shell=True)
